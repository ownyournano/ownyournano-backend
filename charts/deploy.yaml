---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nanter-deployment
  labels:
    app: nanter
  namespace: nanter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nanter
  template:
    metadata:
      labels:
        app: nanter
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - name: nanter-container
        image: gurghet/nano-backend:0.13.0 # TODO: index.docker.io
        ports:
          - containerPort: 9000
        env:
          - name: HTTP_PORT
            value: "9000"
          - name: DB_PWD
            valueFrom:
              secretKeyRef:
                name: nanter-db-secret
                key: password
          - name: DB_USER
            value: "postgres"
          - name: DB_URI
            value: "jdbc:postgresql://postgres-nano-postgresql:5432/postgres"
---
apiVersion: v1
kind: Service
metadata:
  name: nanter-service
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-algorithm: "round_robin"
    service.beta.kubernetes.io/do-loadbalancer-tls-ports: "443"
    service.beta.kubernetes.io/do-loadbalancer-certificate-id: "915aca20-8cf2-45aa-83d3-bea82c936a8d"
    service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
  namespace: nanter
spec:
  selector:
    app: nanter
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 9000
      name: http
    - port: 443
      targetPort: 9000
      name: https